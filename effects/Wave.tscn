[gd_scene load_steps=20 format=2]

[ext_resource path="res://art/black.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=4]

[sub_resource type="VisualShaderNodeScalarUniform" id=5]
uniform_name = "speed"

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.5, 1, 0.0 ]
operator = 9

[sub_resource type="VisualShaderNodeScalarUniform" id=8]
uniform_name = "threshold"

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 100.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=10]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec3Constant" id=12]
constant = Vector3( 0.5, 0.5, 0 )

[sub_resource type="VisualShaderNodeVectorOp" id=13]
operator = 1

[sub_resource type="VisualShaderNodeScalarUniform" id=14]
uniform_name = "Frequency"

[sub_resource type="VisualShaderNodeVectorLen" id=15]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
function = 0

[sub_resource type="VisualShader" id=17]
code = "shader_type canvas_item;
uniform float threshold;
uniform float Frequency;
uniform float speed;



void vertex() {
// Output:0

}

void fragment() {
// ScalarUniform:17
	float n_out17p0 = threshold;

// ScalarOp:18
	float n_in18p1 = 100.00000;
	float n_out18p0 = n_out17p0 / n_in18p1;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Vector:4
	vec3 n_out4p0 = vec3(0.500000, 0.500000, 0.000000);

// VectorOp:5
	vec3 n_out5p0 = n_out2p0 - n_out4p0;

// VectorLen:8
	float n_out8p0 = length(n_out5p0);

// ScalarUniform:6
	float n_out6p0 = Frequency;

// ScalarOp:19
	float n_out19p0 = n_out8p0 * n_out6p0;

// Input:12
	float n_out12p0 = TIME;

// ScalarUniform:14
	float n_out14p0 = speed;

// ScalarOp:15
	float n_out15p0 = n_out12p0 * n_out14p0;

// ScalarOp:13
	float n_out13p0 = n_out19p0 + n_out15p0;

// ScalarFunc:9
	float n_out9p0 = sin(n_out13p0);

// ScalarOp:10
	float n_in10p1 = 1.00000;
	float n_out10p0 = n_out9p0 + n_in10p1;

// ScalarOp:11
	float n_in11p1 = 2.00000;
	float n_out11p0 = n_out10p0 / n_in11p1;

// ScalarOp:16
	float n_out16p0 = step(n_out18p0, n_out11p0);

// Output:0
	COLOR.a = n_out16p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -405, -301 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1260, 20 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( -320, -80 )
nodes/fragment/4/node = SubResource( 12 )
nodes/fragment/4/position = Vector2( -320, 20 )
nodes/fragment/5/node = SubResource( 13 )
nodes/fragment/5/position = Vector2( 40, -100 )
nodes/fragment/6/node = SubResource( 14 )
nodes/fragment/6/position = Vector2( -320, 180 )
nodes/fragment/8/node = SubResource( 15 )
nodes/fragment/8/position = Vector2( 220, -20 )
nodes/fragment/9/node = SubResource( 16 )
nodes/fragment/9/position = Vector2( 800, 180 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 460, -80 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 660, -80 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 20, 300 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 580, 280 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 20, 420 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 300, 340 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( 940, 0 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( 360, -260 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( 680, -280 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( 400, 140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 0, 4, 0, 5, 1, 5, 0, 8, 0, 9, 0, 10, 0, 10, 0, 11, 0, 13, 0, 9, 0, 12, 0, 15, 0, 14, 0, 15, 1, 15, 0, 13, 1, 11, 0, 16, 1, 16, 0, 0, 1, 17, 0, 18, 0, 18, 0, 16, 0, 8, 0, 19, 0, 6, 0, 19, 1, 19, 0, 13, 0 )

[sub_resource type="ShaderMaterial" id=18]
shader = SubResource( 17 )
shader_param/threshold = 99.84
shader_param/Frequency = 400.0
shader_param/speed = -0.7

[node name="Wave" type="Sprite"]
modulate = Color( 0, 0, 0, 1 )
material = SubResource( 18 )
scale = Vector2( 4000, 4000 )
texture = ExtResource( 1 )
